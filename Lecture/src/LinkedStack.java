import java.util.Iterator;/** * Created by Gas on 3/29/2017. */public class LinkedStack<Base> {    private Node top;    private class StackIterator implements Iterable<Base>, Iterator<Base> {        private Node where;        private StackIterator() {            where = top;        }        public boolean hasNext() {            return where != null;        }        public Base next() {            Base temp = where.object();            where = where.next;            return temp;        }        public void remove() {        }        public StackIterator iterator() {            return new StackIterator();        }    }    private class Node {        private Base object;        private Node next;    }    //Iterator ops for linked stack:    //boolean hasNext();    //Base next();    //void remove()}